//
// Copyright 2022 Ant Group Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.

syntax = "proto3";

import "psi/proto/common.proto";
import "psi/proto/apsi_wrapper.proto";
import "psi/proto/kw_seal_pir.proto";

package psi;

option cc_generic_services = true;

message KeywordPirServerBackendConfig {
  KeyWordPirBackend backend_type = 1;

  oneof backend {
    ApsiSenderConfig apsi = 2;
    SealPirServerConfig seal_pir = 3;
  }
}

message KeywordPirServerConfig {
  string host = 1;

  InputConfig input = 2;

  string db_path = 3;

  uint32 server_port = 4;

  uint32 num_threads = 5;

  reserved 6, 9;

  KeywordPirServerBackendConfig backend = 10;
}

message KeywordPirClientBackendConfig {
  KeyWordPirBackend backend_type = 1;

  oneof backend {
    ApsiReceiverConfig apsi = 2;
    SealPirClientConfig seal_pir = 3;
  }
}

enum KeywordPirClientMode {
  CLIENT_MODE_UNKNOWN = 0;
  CLIENT_MODE_FILE = 1;
  CLIENT_MODE_SERVICE = 2;
}

message KeywordPirClientFileModeConfig {
  InputConfig input = 1;

  OutputConfig output = 2;
}

message KeywordPirClientServiceModeConfig {
  string host = 1;

  uint32 port = 2;
}

message KeywordPirClientConfig {
  string server_address = 1;

  KeywordPirClientMode mode = 2;

  oneof config {
    KeywordPirClientFileModeConfig file_config = 3;

    KeywordPirClientServiceModeConfig service_config = 4;
  }

  reserved 5 to 9;

  KeywordPirClientBackendConfig backend = 10;
}